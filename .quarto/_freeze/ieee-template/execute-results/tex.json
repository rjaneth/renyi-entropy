{
  "hash": "75705c7e7b65243be0633cfaff4caca2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: A Sample Article Using `quarto-ieee` for IEEE Journal and Transactions\nformat:\n  ieee-pdf:\n    keep-tex: true  \n  ieee-html: default\nauthor:\n  - id: dfolio\n    name: David Folio\n    affiliations:\n      - name: INSA Centre Val de Loire\n        department: Laboratoire Prisme\n        city: Bourges\n        country: France\n        postal-code: 18800\n      - name: Unknown affiliation\n    orcid: 0000-0001-9430-6091\n    email: david.folio@insa-cvl.fr\n    url: https://dfolio.fr/\n    membership: \"Member, IEEE\"\n    attributes:\n      corresponding: true\n    #photo: david-folio.png\n    #bio: |\n    #  Use `IEEEbiography`  with figure as  option and\n    #  the author name as the argument followed by the biography text.\n  - name: John Doe\n    affiliations: \n      - name: Anonymous University\n    # bio: |\n    #   Use `IEEEbiographynophoto` and the author name\n    #   as the argument followed by the biography text.\n    # note: \"Template created June 23, 2023; revised January 02, 2025.\"\nabstract: |\n  This document describes the most common article elements and how to use the \n  `quarto-ieee` class with Pandoc/Quarto-Markdown to produce files that are\n  suitable for submission to IEEE journals.  \n  `quarto-ieee` can produce conference, journal, and technical note (correspondence) \n  papers with a suitable choice of class options. \n  It intends to generate PDF and HTML outputs that closely mimick what IEEE would generate.\nkeywords: [IEEE, IEEEtran, journal, Quarto, Pandoc, template]\n#funding: \nfunding: \n  statement: \"The `quarto-ieee` template is freely available under the MIT license on github: <https://github.com/dfolio/quarto-ieee>.\"\npageheader:\n  left: Journal XXX, Month Year\n  right: 'D. Folio:  A Sample Article Using quarto-ieee'\n  \nheader-includes:\n   - \\usepackage[english]{babel}\n   - \\usepackage{bm,bbm}\n   - \\usepackage{mathrsfs}\n   - \\usepackage{siunitx}\n   - \\usepackage{graphicx}\n   - \\usepackage{url}\n   - \\usepackage[T1]{fontenc}\n   - \\usepackage{polski}\n   - \\usepackage{booktabs}\n   - \\usepackage{color}\n   - \\usepackage{xcolor}\n   - \\usepackage{amsmath}\n   - \\usepackage{multirow}\n   - \\usepackage{subcaption}\n   - \\captionsetup[subfigure]{labelformat=parens, justification=centering}\n   - \\usepackage{placeins}\n   \nbibliography: bibliography.bib\ndate: 2023-06-23\npdf: https://github.com/dfolio/quarto-ieee/blob/main/template.pdf\ncitation: \n  container-title: GitHUB\n  page: 1-3\n  type: software\n  issued: 2023-06-23\n  url: https://github.com/dfolio/quarto-ieee\n  pdf-url: https://github.com/dfolio/quarto-ieee/template.pdf\n  \n---\n\n\n\n\n\n\n\n\n# How to Use Cache in Quarto{#sec-intro}\n\n## Global Cache\nFirst, we need to activate the cache globally for the entire document. This means that all chunks that are executed will be cached and will not be executed again unless there is a change in the code or dependencies.\n\n    ```{{r setup, include=FALSE}}\n    knitr::opts_chunk$set(echo = FALSE, \n                                  cache=TRUE)\n    ```\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n##  Simple Plot Example with Global Cache\nThis chunk uses the global cache. After the first execution, the cached result will be used, so the plot won't be regenerated unless the code or data changes.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\ndata <- rnorm(1000)\n\nplot(density(data), main = \"plot\")\n```\n\n::: {.cell-output-display}\n![](ieee-template_files/figure-pdf/unnamed-chunk-2-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n## Cache in a Specific Chunk\nThis chunk caches the summary table calculation. The table will only be recalculated if the code or the data changes.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ieee-template_files/figure-pdf/unnamed-chunk-3-1.pdf)\n:::\n:::\n\n\n\n\n## Using if (!file.exists(...)) to Save Data\n\nThis chunk uses the if (!file.exists(...)) condition to avoid recalculating the data if the file already exists. If the file exists, it loads the saved data; otherwise, it runs the computation and saves the results to the file. This approach is useful for collaboration, where you can share the file and avoid recomputation on other machines.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This code will be displayed in the document\n\n# Check if the data file exists and save the results\n\nif (!file.exists(\"saved_data.Rdata\")) {\n\n  computed_data <- rnorm(1000)\n  save(computed_data, file = \"./Data/example_data.Rdata\")\n} else {\n  \n  # Load the saved data\n  load(\"./Data/example_data.Rdata\")\n}\n\n# \nhead(computed_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  2.1988103  1.3124130 -0.2651451  0.5431941 -0.4143399 -0.4762469\n```\n\n\n:::\n:::\n\n\n\n\n\n## eval: false\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This chunk will display the code\n# but will not execute it\nset.seed(123)\ndata <- rnorm(1000)\nplot(density(data), main = \"plot\")\n```\n:::\n\n\n\n\n\n# Other examples: Plot and table\n\nIn a famous paper, @BC64 introduced a family of transformations \\dots\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Simulated data from a N(0,1) distribution.](ieee-template_files/figure-pdf/fig-density0-1.pdf){#fig-density0 fig-pos='H'}\n:::\n:::\n\n\n\n\n\n@fig-density0 shows a kernel density estimate of simulated data from a N(0,1) distribution. The sample variance is given by\n$$\n  s^2 = \\frac{1}{n-1} \\sum_{i=1}^n (x_i-\\bar{x})^2 = 0.98.\n$$ {#eq-s2}\nNote that @eq-s2 is an unbiased estimate of the variance, but it is not the maximum likelihood estimate [@Rice2007, p.269].\n\nIn table \\ref{tab:time} we have ...\n\n\n\n::: {.cell}\n\n:::\n\n\\begin{table}[H]\n\\centering\\centering\n\\caption{\\label{tab:time}Test accuracy and processing time for each bootstrap-improved estimator. }\n\\resizebox{\\ifdim\\width>\\linewidth\\linewidth\\else\\width\\fi}{!}{\n\\begin{tabu} to \\linewidth {>{\\centering}X>{\\centering}X>{\\centering}X>{\\centering}X>{\\centering}X}\n\\toprule\n\\multicolumn{1}{c}{\\textbf{Estimator}} & \\multicolumn{1}{c}{$\\bm{L}$} & \\multicolumn{1}{c}{$\\bm{n}$} & \\multicolumn{1}{c}{$S(\\bm{Z}; L)$} & \\multicolumn{1}{c}{\\textbf{ Time} (s)}\\\\\n\\midrule\n$\\widetilde{H}_{\\text{AO}}$ & $8$ & $25$ & $-0.06556$ & 0.03\\\\\n$\\widetilde{H}_{\\text{AO}}$ & $8$ & $49$ & $-0.00231$ & 0.01\\\\\n\\bottomrule\n\\end{tabu}}\n\\end{table}\n\n\n\n\n\n\n\n\n# Markdown basics {#sec-Markdown}\nThe reader can easily find many documentations on how to write using the (Pandoc/Quarto) Markdown syntax.\nThe `quarto-ieee` template relies mainly on the Markdown markup supported by Quarto @quarto-markdown, which is build based on Pandoc [@MacFarlane_Pandoc; @Allaire_Quarto_2022].\nBelow are some basic examples of usage of the Markdown markup (to save space, it is better to consult the original Quarto document `template.qmd`).\n\n\n\n\n## Figures\nAn image with nonempty alt text will be rendered as a figure with a caption with Pandoc and Quarto.\nQuarto includes a different features to simplify the use of figures and subfigures.\nHere, it is recommended to use div block with `#fig-` label to embed your Figures.\n\n\n:::{#fig-1}\n![](fig1.png){width=\"30%\"}\n\nAn example of figure.\n:::\n\n\n:::{#fig-2  layout-ncol=2}\n![ ](fig1.png){#fig-2a}\n\n![ ](fig1.png){#fig-2b}\n\nAn example with sub-figure.\n:::\n\n\nThe figures is cross-referenced as @fig-2  and even the sub-figures as @fig-2b.\n\n### Tables {#sec-tables}\n\nSimilarly, many kind of tables may be used with Pandoc and Quarto.\nThe latter also includes different features to simplify the table output.\nTo make tables cross-referenceable use a label with a `#tbl-` prefix. \n\\\nHowever, it is recommended to avoid using the commonly used single Markdown table known as a 'pipe table'. \nIn fact, Pandoc Markdown uses the {{< latex >}} `longtable` package, which does not support the two-column mode, which is required for most `IEEEtran` journals.\n`quarto-ieee` uses a hack to temporarily switch to one-column mode. \nHowever, this hack may break the page layout.\nTo overcome this issue, a basic way is to use code cells (as for @tbl-other).\nQuarto is a multi-language and it uses  `Knitr` to execute `R` code and can execute  Python code blocks within Markdown.\n\n::: {#tbl-panel layout-ncol=2}\n| Col1 | Col2 | Col3 |\n|------|------|------|\n| A    | B    | C    |\n| E    | F    | G    |\n| A    | G    | G    |\n\n: First Table {#tbl-first}\n\n| Col1 | Col2 | Col3 |\n|------|------|------|\n| A    | B    | C    |\n| E    | F    | G    |\n| A    | G    | G    |\n\n: Second Table {#tbl-second}\n\nMain Caption \n:::\n\nThe Tables are cross-referenced as @tbl-panel for details, especially @tbl-second.\nThere is also @tbl-other.\n\n\n\n\n::: {#tbl-other .cell tbl-cap='A table' tbl.env='tabular'}\n::: {.cell-output-display}\n\n\\begin{tabular}{lll}\n\\toprule\nCol1 & Col2 & Col3\\\\\n\\midrule\nA & D & G\\\\\nB & E & H\\\\\nC & F & I\\\\\n\\bottomrule\n\\end{tabular}\n\n\n:::\n:::\n\n\n\n\n## Bibliography\n\nIEEE journal should normally use IEEEtran[^bibtex] {{< bibtex >}} style.\nNevertheless, Pandoc and Quarto do support {{< bibtex >}} with natbib or biblatex. However, neither is officially recommended for normal IEEE use.\nFor this reason, `quarto-ieee` uses `citeproc` with the `ieee` CSL style sheet.\n\n[^bibtex]: IEEEtran BibTeX  style support  page is: <http://www.michaelshell.org/tex/ieeetran/bibtex/>\n\n\n# Conclusions\nThe conclusion goes here.\n\n# Acknowledgment {-}\n\n\n\n[]{.appendix options=\"An Appendix\"}\n\n\nUse `[]{.appendix options=\"An Appendix\"}` markup if you have a single appendix.\n`IEEEtran` state that to do not use `\\section{}` anymore after `\\appendix`.\n\n\n\n::: {.content-visible when-format=\"pdf\"}\n# References {-}\n:::\n\n\n\n[^issues-1023]: [\"_[longtable not compatible with 2-column LaTeX documents](https://github.com/jgm/pandoc/issues/1023>)_\", \n\n[^issues-2275]: See the issue here <https://github.com/quarto-dev/quarto-cli/issues/2275>\n\n[IEEEXplore<sup>®</sup>]: <https://ieeexplore.ieee.org/>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "\\usepackage{booktabs}\n\\usepackage{longtable}\n\\usepackage{array}\n\\usepackage{multirow}\n\\usepackage{wrapfig}\n\\usepackage{float}\n\\usepackage{colortbl}\n\\usepackage{pdflscape}\n\\usepackage{tabu}\n\\usepackage{threeparttable}\n\\usepackage{threeparttablex}\n\\usepackage[normalem]{ulem}\n\\usepackage{makecell}\n\\usepackage{xcolor}\n"
      ]
    },
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}